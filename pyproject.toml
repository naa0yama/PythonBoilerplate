[tool.poetry]
name                       = "pythonboilerplate"
version                    = "0.0.0"   # using setuptools-git-versioning
description                = "Python を開発する時用ボイラープレート"
authors                    = [
    "Naoki Aoyama"
]
license                    = "AGPL-3.0"

[tool.poetry.scripts]
sample-cli                 = "pythonboilerplate.cli:main"

# sphinx 用
[project]
name                       = "pythonboilerplate"
version                    = "0.0.0"   # using setuptools-git-versioning
description                = "Python を開発する時用ボイラープレート"
[[project.authors]]
name                       = "Naoki Aoyama"

[tool.poetry.dependencies]
python                     = "3.10.13"

setuptools-git-versioning  = "1.13.5"

[tool.poetry.group.dev.dependencies]
ipykernel                  = "~6.29.0"
pip                        = "^23.0.0"
pre-commit                 = "~3.6.0"
taskipy                    = "~1.12.0"
tox                        = "~4.12.0"
tox-gh-actions             = "~3.2.0"

[tool.poetry.group.docs.dependencies]
furo                       = "~2023.9.0"
sphinx                     = "~7.2.0"
sphinx-autobuild           = "~2021.3.14"
sphinx-pyproject           = "~0.3.0"

[tool.poetry.group.tests.dependencies]
pytest                     = "~7.4.0"
pytest-azurepipelines      = "~1.0.4"
pytest-cov                 = "~4.1.0"
pytest-mock                = "~3.12.0"

[tool.poetry.group.types.dependencies]
types-requests             = "~2.28.11.8"

[tool.poetry.group.linting.dependencies]
autoflake                  = "~2.2.0"
black                      = "~23.12.0"
flake8                     = "~6.1.0"
flake8-annotations         = "~3.0.0"
flake8-black               = "~0.3.2"
flake8-bugbear             = "~24.1.0"
flake8-builtins            = "~2.2.0"
flake8-commas              = "~2.1.0"
flake8-comprehensions      = "~3.14.0"
flake8-debugger            = "~4.1.0"
flake8-docstrings          = "~1.7.0"
flake8-fixme               = "~1.1.1"
flake8-isort               = "~6.1.0"
flake8-print               = "~5.0.0"
flake8-return              = "~1.2.0"
flake8-simplify            = "~0.21.0"
flake8-unused-globals      = "~0.1.9"
flake8-use-fstring         = "~1.4.0"
flake8-variables-names     = "~0.0.4"
isort                      = "~5.13.0"
mypy                       = "~1.8.0"
pyproject-flake8           = "~6.1.0"

[tool.black]
line-length                = 99
exclude                    = '''
(
    migrations
    | .mypy_cache
    | .pytest_cache
    | .tox
    | .venv
    | .history
)
'''

[tool.flake8]
max-line-length            = 99
# E203: ":"の前の空白を入れないルール
# E501: 演算子の前に改行しないようにするルール
# W503: 二項演算子の後に改行が存在する
# ANN101: メソッド内の self の型アノテーションがありません
ignore                     = [
    "E203",
    "E501",
    "W503",
    "ANN101",
]
docstring-convention       = "google"
exclude                    = [
    ".git",
    "__pychache__",
    "build",
    "dist",
    ".tox",
    ".venv",
    ".aws-sam",
    ".mypy_cache",
    ".pytest_cache",
    ".history",
]

[tool.isort]
force_single_line          = true
force_sort_within_sections = true
import_heading_firstparty  = "First Party Library"
import_heading_localfolder = "Local Library"
import_heading_stdlib      = "Standard Library"
import_heading_thirdparty  = "Third Party Library"
include_trailing_comma     = true
line_length                = 99
profile                    = "black"
skip                       = [
    ".history",
    ".mypy_cache",
    ".pytest_cache",
    ".tox",
    ".venv",
]

[tool.mypy]
# Ref: https://mypy.readthedocs.io/en/stable/config_file.html?highlight=pyproject

## Import discovery
ignore_missing_imports     = true
warn_unused_configs        = true

## Disallow dynamic typing
disallow_any_unimported    = true
#disallow_any_generics      = true
disallow_untyped_defs      = true

## Untyped definitions and calls
disallow_untyped_calls     = true
disallow_incomplete_defs   = true
check_untyped_defs         = true
strict_optional            = true

## Configuring warnings
warn_unused_ignores        = true
warn_no_return             = true
warn_return_any            = true
warn_unreachable           = true

## Miscellaneous
scripts_are_modules        = true

[tool.pytest]
[tool.pytest.ini_options]
minversion                 = "6.0"
addopts                    = [
    "-r sfp",
    "--verbose",
    "--verbose",
    "--durations=0",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term",
    "--cov-report=term-missing",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html"
]

[tool.setuptools-git-versioning]
enabled                    = true

[tool.sphinx-pyproject]
autosummary_generate       = true
copyright                  = "2022, naa0yama"
exclude_patterns = [
    "_build",
    ".DS_Store",
    ".gitkeep",
    "Thumbs.db",
]
extensions                 = [
    'sphinx.ext.autosummary',
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
]
html_last_updated_fmt      = "%Y-%m-%dT%H:%M:%S%Z"
html_static_path           = ["_static"]
html_theme                 = "furo"
language                   = "en"
package_root               = "src/pythonboilerplate"
project                    = "pythonboilerplate"
templates_path             = ["_templates"]
todo_include_todos         = true

[tool.taskipy.tasks]
test                       = "pytest"
testview                   = "python3 -m http.server 8000 --directory htmlcov/"

docs                       = "task doc_cleanup && task docs_apidoc && task docs_build"
doc_cleanup                = "rm -rfv docs/*.rst docs/*.bat docs/Makefile"
docs_apidoc                = "sphinx-apidoc -F -e -d 2 -o docs src"
docs_build                 = "sphinx-build docs docs/_build"
docslive                   = "task docs && sphinx-autobuild --watch src docs docs/_build"

[build-system]
requires                   = [
    "poetry-core>=1.0.0",
    "setuptools-git-versioning<2",
    "setuptools>=41",
    "wheel",
]
build-backend              = "setuptools.build_meta"
